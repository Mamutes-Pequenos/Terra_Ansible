name: CI/CD Pipeline for Terraform and Kubernetes

on:
  push:
    branches:
      - developer3  # Acionado apenas no push da branch 'developer3'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Baixa o código do repositório

      - name: Set up GCP credentials (from base64)
        run: |
          mkdir -p /home/runner/gcp_credentials
          echo "${{ secrets.GCP_CREDENTIALS_BASE64 }}" | base64 -d > /home/runner/gcp_credentials/credentials.json
          chmod 600 /home/runner/gcp_credentials/credentials.json
        # Cria pasta e grava o arquivo de credenciais GCP decodificado com permissão restrita

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false  # Garantir que o terraform seja instalado corretamente

      - name: Verify Terraform installation
        run: terraform --version
        # Verifica se o Terraform foi instalado corretamente

      - name: Set up GKE Cluster with Terraform
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve
        # Inicializa o Terraform e cria o cluster GKE com a configuração fornecida

      - name: Set up kubectl for GKE
        run: |
          gcloud auth activate-service-account --key-file=/home/runner/gcp_credentials/credentials.json
          gcloud container clusters get-credentials gke-cluster-semanal-homol --region=${{ secrets.GCP_REGION }} --project=${{ secrets.GCP_PROJECT_ID }}
        # Configura o kubectl para se autenticar e acessar o cluster GKE

      - name: Install kubectl and deploy to Kubernetes cluster
        run: |
          kubectl apply -f k8s/k8s-prometheus/prometheus-deployment.yml
          kubectl apply -f k8s/k8s-prometheus/prometheus-service.yml
          kubectl apply -f k8s/k8s-grafana/grafana-deployment.yml
          kubectl apply -f k8s/k8s-grafana/grafana-service.yml
          kubectl apply -f k8s/k8s-banco/banco-deployment.yml
          kubectl apply -f k8s/k8s-banco/banco-service.yml
        # Aplica os manifests de cada pasta no cluster Kubernetes

      - name: Install Ansible and configure SSH
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y ansible sshpass
          echo "Adicionando o IP do cluster ao known_hosts..."
          ssh-keyscan -H "$CLUSTER_IP" >> ~/.ssh/known_hosts || true
        # Instala o Ansible e adiciona a chave SSH da VM ao arquivo known_hosts

      - name: Run Ansible Playbook
        run: |
          cd ansible
          ansible-playbook playbook.yml -i localhost, -e kubeconfig=/home/runner/kubeconfig
        # Executa o playbook Ansible no cluster
