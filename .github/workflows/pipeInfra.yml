name: CI/CD Pipeline for Terraform and Kubernetes

on:
  push:
    branches:
      - developer4
      - main

jobs:
  infra:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up GCP credentials (from base64)
        run: |
          mkdir -p /home/runner/gcp_credentials
          echo "${{ secrets.GCP_CREDENTIALS_BASE64 }}" | base64 -d > /home/runner/gcp_credentials/credentials.json
          chmod 600 /home/runner/gcp_credentials/credentials.json

      ## MODIFICA O NOME DO CLUSTER.
      - name: Set cluster and nodepool dynamically
        id: set-cluster
        run: |
          if [ "${GITHUB_REF##*/}" = "main" ]; then
            echo "cluster_name=gke-cluster-prod" >> $GITHUB_ENV
          else
            echo "cluster_name=gke-cluster-homol" >> $GITHUB_ENV
          fi  

      ## BAIXA O PLUGIN DO GCP
      - name: Install Google Cloud SDK + kubectl + auth plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates gnupg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | \
            sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo mkdir -p /usr/share/keyrings
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
            sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk kubectl google-cloud-sdk-gke-gcloud-auth-plugin

      ## AUTENTICA O GCP
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_BASE64 }}

      - name: Verificar Autenticação GCP
        run: |
          echo "verifica identidade"
          gcloud auth list
          echo "veifica projeto
          gcloud config list

          
      ## SETUP DO TERRAFORM
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      ## INICIALIZA O TERRAFORM E CRIA O CLUSTER
      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init \
            -backend-config="bucket=gke-cluster-homol" \
            -backend-config="prefix=gke/homol" \

      ## CONFIGURA O GKE
      - name: Configure GKE access
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 416.0.0'
          install_components: 'kubectl,gke-gcloud-auth-plugin'
          project_id: ${{ secrets.GCP_PROJECT_ID }}


      ## RODA O TERRAFORM PARA CRIAR O CLUSTER
      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve

      ## OBTÉM AS CREDENCIAIS DO CLUSTER
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: gke-cluster-homol
          location: us-east1
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      ## ESPERA O CLUSTER SER CRIADO
      - name: Wait for cluster creation
        run: |
          sleep 60  # Aguarda 60 segundos para o cluster ser provisionado

      ## CONFIGURA O KUBECTL E HELM
      - name: Set up kubectl and Helm
        run: |
          gcloud auth activate-service-account --key-file=/home/runner/gcp_credentials/credentials.json
          gcloud container clusters get-credentials ${{ env.cluster_name }} \
            --zone=us-east1-b --project=${{ secrets.GCP_PROJECT_ID }}

      ## INSTALA O HELM PARA O PROMETHEUS
      - name: Install Helm and Deploy Prometheus
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          helm install prometheus-stack prometheus-community/kube-prometheus-stack \
            --namespace monitoramento --create-namespace \
            --set grafana.adminPassword=${{ secrets.GRAFANA_ADMIN_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    needs: infra
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up GCP credentials (from base64)
        run: |
          mkdir -p /home/runner/gcp_credentials
          echo "${{ secrets.GCP_CREDENTIALS_BASE64 }}" | base64 -d > /home/runner/gcp_credentials/credentials.json
          chmod 600 /home/runner/gcp_credentials/credentials.json

      - name: Install Google Cloud SDK + kubectl + auth plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates gnupg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | \
            sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo mkdir -p /usr/share/keyrings
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
            sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk kubectl google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Set cluster and nodepool dynamically
        run: |
          if [ "${GITHUB_REF##*/}" = "main" ]; then
            echo "cluster_name=gke-cluster-prod" >> $GITHUB_ENV
            echo "node_pool=gke-cluster-prod" >> $GITHUB_ENV
          else
            echo "cluster_name=gke-cluster-homol" >> $GITHUB_ENV
            echo "node_pool=gke-cluster-homol" >> $GITHUB_ENV
          fi

      - name: Authenticate gcloud
        run: |
          gcloud auth activate-service-account --key-file=/home/runner/gcp_credentials/credentials.json
          gcloud container clusters get-credentials ${{ env.cluster_name }} \
            --zone=us-east1-b --project=${{ secrets.GCP_PROJECT_ID }}

      - name: Apply Namespaces
        run: |
          kubectl apply -f k8s/k8s-banco/db-namespace.yml
      
      - name: Apply Deployments
        run: |
          kubectl apply -f k8s/k8s-banco/banco-deployment.yml
          kubectl apply -f k8s/k8s-banco/banco-service.yml

  verify:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set cluster and nodepool dynamically
        run: |
          if [ "${GITHUB_REF##*/}" = "main" ]; then
            echo "cluster_name=gke-cluster-prod" >> $GITHUB_ENV
          else
            echo "cluster_name=gke-cluster-homol" >> $GITHUB_ENV
          fi

      - name: Install Google Cloud SDK + kubectl + auth plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates gnupg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | \
            sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo mkdir -p /usr/share/keyrings
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
            sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk kubectl google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Set up GCP credentials (from base64)
        run: |
          mkdir -p /home/runner/gcp_credentials
          echo "${{ secrets.GCP_CREDENTIALS_BASE64 }}" | base64 -d > /home/runner/gcp_credentials/credentials.json
          chmod 600 /home/runner/gcp_credentials/credentials.json

      - name: Authenticate gcloud
        run: |
          gcloud auth activate-service-account --key-file=/home/runner/gcp_credentials/credentials.json
          gcloud container clusters get-credentials ${{ env.cluster_name }} \
            --zone=us-east1-b --project=${{ secrets.GCP_PROJECT_ID }}

